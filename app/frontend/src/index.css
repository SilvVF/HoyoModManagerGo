@import "tw-animate-css";
@import "tailwindcss";

:root {
  --background: oklch(0.96 0.01 264.53);
  --foreground: oklch(0.44 0.04 279.33);
  --card: oklch(1.00 0 0);
  --card-foreground: oklch(0.44 0.04 279.33);
  --popover: oklch(0.86 0.01 268.48);
  --popover-foreground: oklch(0.44 0.04 279.33);
  --primary: oklch(0.55 0.25 297.02);
  --primary-foreground: oklch(1.00 0 0);
  --secondary: oklch(0.86 0.01 268.48);
  --secondary-foreground: oklch(0.44 0.04 279.33);
  --muted: oklch(0.91 0.01 264.51);
  --muted-foreground: oklch(0.55 0.03 279.08);
  --accent: oklch(0.68 0.14 235.38);
  --accent-foreground: oklch(1.00 0 0);
  --destructive: oklch(0.55 0.22 19.81);
  --destructive-foreground: oklch(1.00 0 0);
  --border: oklch(0.81 0.02 271.20);
  --input: oklch(0.86 0.01 268.48);
  --ring: oklch(0.55 0.25 297.02);
  --chart-1: oklch(0.55 0.25 297.02);
  --chart-2: oklch(0.68 0.14 235.38);
  --chart-3: oklch(0.63 0.18 140.44);
  --chart-4: oklch(0.69 0.20 42.43);
  --chart-5: oklch(0.71 0.10 33.10);
  --sidebar: oklch(0.93 0.01 264.52);
  --sidebar-foreground: oklch(0.44 0.04 279.33);
  --sidebar-primary: oklch(0.55 0.25 297.02);
  --sidebar-primary-foreground: oklch(1.00 0 0);
  --sidebar-accent: oklch(0.68 0.14 235.38);
  --sidebar-accent-foreground: oklch(1.00 0 0);
  --sidebar-border: oklch(0.81 0.02 271.20);
  --sidebar-ring: oklch(0.55 0.25 297.02);
  --font-sans: Montserrat, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Fira Code, monospace;
  --radius: 0.35rem;
  --shadow-2xs: 0px 4px 6px 0px hsl(240 30% 25% / 0.06);
  --shadow-xs: 0px 4px 6px 0px hsl(240 30% 25% / 0.06);
  --shadow-sm: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 1px 2px -1px hsl(240 30% 25% / 0.12);
  --shadow: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 1px 2px -1px hsl(240 30% 25% / 0.12);
  --shadow-md: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 2px 4px -1px hsl(240 30% 25% / 0.12);
  --shadow-lg: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 4px 6px -1px hsl(240 30% 25% / 0.12);
  --shadow-xl: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 8px 10px -1px hsl(240 30% 25% / 0.12);
  --shadow-2xl: 0px 4px 6px 0px hsl(240 30% 25% / 0.30);
}

.dark {
  --background: oklch(0.22 0.03 284.06);
  --foreground: oklch(0.88 0.04 272.28);
  --card: oklch(0.24 0.03 283.91);
  --card-foreground: oklch(0.88 0.04 272.28);
  --popover: oklch(0.40 0.03 280.15);
  --popover-foreground: oklch(0.88 0.04 272.28);
  --primary: oklch(0.79 0.12 304.77);
  --primary-foreground: oklch(0.24 0.03 283.91);
  --secondary: oklch(0.48 0.03 278.64);
  --secondary-foreground: oklch(0.88 0.04 272.28);
  --muted: oklch(0.30 0.03 276.21);
  --muted-foreground: oklch(0.75 0.04 273.93);
  --accent: oklch(0.85 0.08 210.25);
  --accent-foreground: oklch(0.24 0.03 283.91);
  --destructive: oklch(0.76 0.13 2.76);
  --destructive-foreground: oklch(0.24 0.03 283.91);
  --border: oklch(0.32 0.03 281.98);
  --input: oklch(0.32 0.03 281.98);
  --ring: oklch(0.79 0.12 304.77);
  --chart-1: oklch(0.79 0.12 304.77);
  --chart-2: oklch(0.85 0.08 210.25);
  --chart-3: oklch(0.86 0.11 142.72);
  --chart-4: oklch(0.82 0.10 52.63);
  --chart-5: oklch(0.92 0.02 30.49);
  --sidebar: oklch(0.18 0.02 284.20);
  --sidebar-foreground: oklch(0.88 0.04 272.28);
  --sidebar-primary: oklch(0.79 0.12 304.77);
  --sidebar-primary-foreground: oklch(0.24 0.03 283.91);
  --sidebar-accent: oklch(0.85 0.08 210.25);
  --sidebar-accent-foreground: oklch(0.24 0.03 283.91);
  --sidebar-border: oklch(0.40 0.03 280.15);
  --sidebar-ring: oklch(0.79 0.12 304.77);
  --font-sans: Montserrat, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Fira Code, monospace;
  --radius: 0.35rem;
  --shadow-2xs: 0px 4px 6px 0px hsl(240 30% 25% / 0.06);
  --shadow-xs: 0px 4px 6px 0px hsl(240 30% 25% / 0.06);
  --shadow-sm: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 1px 2px -1px hsl(240 30% 25% / 0.12);
  --shadow: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 1px 2px -1px hsl(240 30% 25% / 0.12);
  --shadow-md: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 2px 4px -1px hsl(240 30% 25% / 0.12);
  --shadow-lg: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 4px 6px -1px hsl(240 30% 25% / 0.12);
  --shadow-xl: 0px 4px 6px 0px hsl(240 30% 25% / 0.12), 0px 8px 10px -1px hsl(240 30% 25% / 0.12);
  --shadow-2xl: 0px 4px 6px 0px hsl(240 30% 25% / 0.30);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }

  ::selection {
    @apply bg-primary text-background;
  }

  ::-webkit-scrollbar {
    @apply w-2 h-2;
  }

  ::-webkit-scrollbar-track {
    @apply bg-muted;
  }

  ::-webkit-scrollbar-thumb {
    @apply rounded-full bg-muted-foreground;
  }

  input:-webkit-autofill,
  textarea:-webkit-autofill,
  select:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 1000px hsl(var(--background)) inset !important;
    box-shadow: 0 0 0 1000px hsl(var(--background)) inset !important;
    -webkit-text-fill-color: hsl(var(--foreground)) !important;
  }
}


@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);

  --font-sans: var(--font-sans);
  --font-mono: var(--font-mono);
  --font-serif: var(--font-serif);

  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);

  --shadow-2xs: var(--shadow-2xs);
  --shadow-xs: var(--shadow-xs);
  --shadow-sm: var(--shadow-sm);
  --shadow: var(--shadow);
  --shadow-md: var(--shadow-md);
  --shadow-lg: var(--shadow-lg);
  --shadow-xl: var(--shadow-xl);
  --shadow-2xl: var(--shadow-2xl);
}

@layer base {
  :root {
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@theme inline {
  --animation-delay-0: 0s;
  --animation-delay-75: 75ms;
  --animation-delay-100: 0.1s;
  --animation-delay-150: 0.15s;
  --animation-delay-200: 0.2s;
  --animation-delay-300: 0.3s;
  --animation-delay-500: 0.5s;
  --animation-delay-700: 0.7s;
  --animation-delay-1000: 1s;

  --animation-repeat-0: 0;
  --animation-repeat-1: 1;
  --animation-repeat-infinite: infinite;

  --animation-direction-normal: normal;
  --animation-direction-reverse: reverse;
  --animation-direction-alternate: alternate;
  --animation-direction-alternate-reverse: alternate-reverse;

  --animation-fill-mode-none: none;
  --animation-fill-mode-forwards: forwards;
  --animation-fill-mode-backwards: backwards;
  --animation-fill-mode-both: both;

  --animate-in: var(--tw-duration, 150ms) var(--tw-ease, ease) enter;
  --animate-out: var(--tw-duration, 150ms) var(--tw-ease, ease) exit;

  --percentage-0: 0;
  --percentage-5: 0.05;
  --percentage-10: 0.1;
  --percentage-15: 0.15;
  --percentage-20: 0.2;
  --percentage-25: 0.25;
  --percentage-30: 0.3;
  --percentage-35: 0.35;
  --percentage-40: 0.4;
  --percentage-45: 0.45;
  --percentage-50: 0.5;
  --percentage-55: 0.55;
  --percentage-60: 0.6;
  --percentage-65: 0.65;
  --percentage-70: 0.7;
  --percentage-75: 0.75;
  --percentage-80: 0.8;
  --percentage-85: 0.85;
  --percentage-90: 0.9;
  --percentage-95: 0.95;
  --percentage-100: 1;

  @keyframes enter {
    from {
      opacity: var(--tw-enter-opacity, 1);
      transform: translate3d(var(--tw-enter-translate-x, 0),
          var(--tw-enter-translate-y, 0),
          0) scale3d(var(--tw-enter-scale, 1),
          var(--tw-enter-scale, 1),
          var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
    }
  }

  @keyframes exit {
    to {
      opacity: var(--tw-exit-opacity, 1);
      transform: translate3d(var(--tw-exit-translate-x, 0),
          var(--tw-exit-translate-y, 0),
          0) scale3d(var(--tw-exit-scale, 1),
          var(--tw-exit-scale, 1),
          var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
    }
  }

  --animate-accordion-down: accordion-down var(--tw-duration, 200ms) ease-out;
  --animate-accordion-up: accordion-up var(--tw-duration, 200ms) ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }

    to {
      height: var(--radix-accordion-content-height,
          --bits-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height,
          --bits-accordion-content-height);
    }

    to {
      height: 0;
    }
  }
}

@utility delay-* {
  animation-delay: calc(--value(number) * 1ms);
  animation-delay: --value(--animation-delay- *, [duration], [ *]);
}

@utility repeat-* {
  animation-iteration-count: --value(--animation-repeat- *, integer);
}

@utility direction-* {
  animation-direction: --value(--animation-direction- *);
}

@utility fill-mode-* {
  animation-fill-mode: --value(--animation-fill-mode- *);
}

@utility running {
  animation-play-state: running;
}

@utility paused {
  animation-play-state: paused;
}

@utility fade-in {
  --tw-enter-opacity: 0;
}

@utility fade-in-* {
  --tw-enter-opacity: --value(--percentage- *, [ *]);
}

@utility fade-out {
  --tw-exit-opacity: 0;
}

@utility fade-out-* {
  --tw-exit-opacity: --value(--percentage- *, [ *]);
}

@utility zoom-in {
  --tw-enter-scale: 0;
}

@utility zoom-in-* {
  --tw-enter-scale: calc(--value([percentage]) / 100%);
  --tw-enter-scale: calc(--value([ratio], [number]));
  --tw-enter-scale: --value(--percentage- *);
}

@utility zoom-out {
  --tw-exit-scale: 0;
}

@utility zoom-out-* {
  --tw-exit-scale: calc(--value([percentage]) / 100%);
  --tw-exit-scale: calc(--value([ratio], [number]));
  --tw-exit-scale: --value(--percentage- *);
}

@utility spin-in {
  --tw-enter-rotate: 30deg;
}

@utility spin-in-* {
  --tw-enter-rotate: calc(--value(number) * 1deg);
  --tw-enter-rotate: --value(--rotate- *, [angle]);
}

@utility spin-out {
  --tw-exit-rotate: 30deg;
}

@utility spin-out-* {
  --tw-exit-rotate: calc(--value(number) * 1deg);
  --tw-exit-rotate: --value(--rotate- *, [angle]);
}

@utility slide-in-from-top {
  --tw-enter-translate-y: -100%;
}

@utility slide-in-from-top-* {
  --tw-enter-translate-y: calc(--value(integer) * var(--spacing) * -1);
  --tw-enter-translate-y: calc(--value(--translate- *, [percentage], ratio, [length]) * -1);
}

@utility slide-in-from-bottom {
  --tw-enter-translate-y: 100%;
}

@utility slide-in-from-bottom-* {
  --tw-enter-translate-y: calc(--value(integer) * var(--spacing));
  --tw-enter-translate-y: --value(--translate- *,
      [percentage],
      ratio,
      [length]);
}

@utility slide-in-from-left {
  --tw-enter-translate-x: -100%;
}

@utility slide-in-from-left-* {
  --tw-enter-translate-x: calc(--value(integer) * var(--spacing) * -1);
  --tw-enter-translate-x: calc(--value(--translate- *, [percentage], ratio, [length]) * -1);
}

@utility slide-in-from-right {
  --tw-enter-translate-x: 100%;
}

@utility slide-in-from-right-* {
  --tw-enter-translate-x: calc(--value(integer) * var(--spacing));
  --tw-enter-translate-x: --value(--translate- *,
      [percentage],
      ratio,
      [length]);
}

@utility slide-out-to-top {
  --tw-exit-translate-y: -100%;
}

@utility slide-out-to-top-* {
  --tw-exit-translate-y: calc(--value(integer) * var(--spacing) * -1);
  --tw-exit-translate-y: calc(--value(--translate- *, [percentage], ratio, [length]) * -1);
}

@utility slide-out-to-bottom {
  --tw-exit-translate-y: 100%;
}

@utility slide-out-to-bottom-* {
  --tw-exit-translate-y: calc(--value(integer) * var(--spacing));
  --tw-exit-translate-y: --value(--translate- *, [percentage], ratio, [length]);
}

@utility slide-out-to-left {
  --tw-exit-translate-x: -100%;
}

@utility slide-out-to-left-* {
  --tw-exit-translate-x: calc(--value(integer) * var(--spacing) * -1);
  --tw-exit-translate-x: calc(--value(--translate- *, [percentage], ratio, [length]) * -1);
}

@utility slide-out-to-right {
  --tw-exit-translate-x: 100%;
}

@utility slide-out-to-right-* {
  --tw-exit-translate-x: calc(--value(integer) * var(--spacing));
  --tw-exit-translate-x: --value(--translate- *, [percentage], ratio, [length]);
}